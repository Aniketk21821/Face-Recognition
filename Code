STEP 1-->

import cv2
import numpy as numpy
import face_recognition

imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Elon Test.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

cv2.imgshow('Elon Musk', imgElon)
cv2.imgshow('Elon Test', imgTest) 
cv2.waitkey(0)    #(first load the actual image and test image both and after that show the both images)

STEP 2-->


imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Elon Test.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

faceLoc = face_recognition.face_location(imgElon)[0]
encodeElon = face_recognition.face_encodings(imgElon)[0]
#cv2.rectangle(imgElon,(fac))
print(faceLoc)    #(Gives 4 diff values is Top, Right, Bottom and Left)

faceLoc = face_recognition.face_location(imgElon)[0]
encodeElon = face_recognition.face_encodings(imgElon)[0]
cv2.rectangle(imgElon,(faceLoc[3], faceLoc[0], faceLoc[1], faceLoc[2]),(255,0,255),2)      #(Get the face detect)

faceLocTest = face_recognition.face_location(imgTest)[0]
encodeTest = face_recognition.face_encodings(imgTest)[0]
cv2.rectangle(imgTest,(faceLocTest[3], faceLocTest[0], faceLocTest[1], faceLocTest[2]),(255,0,255),2)     #(Detect the face of test image)

STEP 3-->

imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Elon Test.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

results = face_recognition.compare_faces([encodeElon],encodeTest)
print(results)   #(for compare the elon image and test image and give True output)


imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Bill Gates.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

results = face_recognition.compare_faces([encodeElon],encodeTest)
print(results)      #(Give false output because face of Elon musk and Bill gates test image  dosen't match)

imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Elon Test.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

faceLocTest = face_recognition.face_location(imgTest)[0]
encodeTest = face_recognition.face_encodings(imgTest)[0]
cv2.rectangle(imgTest,(faceLocTest[3], faceLocTest[0], faceLocTest[1], faceLocTest[2]),(255,0,255),2)

results = face_recognition.compare_faces([encodeElon],encodeTest)
faceDis = face_recognition.face_distance([encodeElon],encodeTest)
print(results,faceDis)     #(If we have a lot of images and find the similar images then use 'Distance' library)

imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Elon Test.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

faceLocTest = face_recognition.face_location(imgTest)[0]
encodeTest = face_recognition.face_encodings(imgTest)[0]
cv2.rectangle(imgTest,(faceLocTest[3], faceLocTest[0], faceLocTest[1], faceLocTest[2]),(255,0,255),2)

results = face_recognition.compare_faces([encodeElon],encodeTest)
faceDis = face_recognition.face_distance([encodeElon],encodeTest)
print(results,faceDis)

cv2.putText(imgTest,f'{result} {round(facedis[0],2)}',(50,50),cv2.FONT_HERSHEY_COMPLEX,1,(0,0,255),2     #(put the text value on tast image)

imgElon = face_recognition.load_image_file('ImageBasic/Elon Musk.jpg')
imgElon = cv2.cvtCOLOR(imgElon,cv2.COLOR_BGR2RGB)
imgTest = face_recognition.load_image_file('ImageBasic/Bill Gates.jpg')
imgTest = cv2.cvtCOLOR(imgTest,cv2.COLOR_BGR2RGB)

faceLocTest = face_recognition.face_location(imgTest)[0]
encodeTest = face_recognition.face_encodings(imgTest)[0]
cv2.rectangle(imgTest,(faceLocTest[3], faceLocTest[0], faceLocTest[1], faceLocTest[2]),(255,0,255),2)

results = face_recognition.compare_faces([encodeElon],encodeTest)
faceDis = face_recognition.face_distance([encodeElon],encodeTest)
print(results,faceDis)

cv2.putText(imgTest,f'{result} {round(facedis[0],2)}',(50,50),cv2.FONT_HERSHEY_COMPLEX,1,(0,0,255),2)       #(If we chanfe the test image then gives false value)
